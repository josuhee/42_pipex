[exec]
l : argv가 list로 나열됨. 끝은 NULL
v : argv가 vector(배열)로 parameter를 하나를 받는다는 의미. 마지막 값은 NULL
p : 첫번째 파라미터인 명령어/실행파일이 PATH로 지정된 디렉토리에 있다면 full path 또는 상대 path로 하지 않아도 된다는 뜻.
e : 설정할 환경변수를 parameter로 받는 다는 의미.


[execve]
filename
- 교체할 실행 파일/명령어
- filename은 실행가능한 binary이거나 shell이어야 한다.
- filename은 path가 설정되어 있는 디렉토리라고 하더라도 절대 path나 상대 path로 정확한 위치를 지정해야한다.

argv
- c언어의 main(int argc, char *argv[])에서 argv와 비슷하며, main 함수에는 argc가 있지만 execve에는 argc가 없으므로 마지막 값은 NULL이어야 함.

envp
- key=value 형식의 환경변수 문자열 배열 리스트로 마지막은 NULL

return
- 없음. 프로그램이 정상적으로 실행됨.
- (-1). binary 교체가 실패하였으며, 상세한 오류 내용은 errno 전역변수에 설정됨.


[fork]
- fork 함수를 호출하는 프로세스는 부모 프로세스가 되고 새롭게 생성되는 프로세스는 자식 프로세스가 된다.
- fork 함수에 의해 생성된 자식 프로세스는 부모 프로세스의 메모리를 그대로 복사하여 가지게 된다.
- 그리고 fork 함수 호출 이후 코드부터 각자의 메모리를 사용하여 실행된다.
- #include <unistd.h>

pid_t fork(void);
//성공 시 : 부모 프로세스에서는 자식 프로세스의 PID 값을 반환 받음
//	     자식 프로세스에서는 0값을 반환받음
//실패 시 : -1 반환


[pipe]
- 프로세스는 메모리가 독립적으로 존재하기 때문에 메모리를 프로세스간 통신을 하는 것은 불가능하다.
- fork()를 이용하여 생성된 프로세스들은 프로세스끼리 데이터를 주고 받을 방법이 없다는 뜻이다.
- 이에 대한 해결책으로 pipe 함수를 사용하여, 서로 독립된 프로세스들이 데이터를 주고 받을 수 있게 한다.
- #include <unistd.h>

int pipe(int fd[1]);
//성공 시 : 0
//실패 시 : -1

* 특징 *
1. 파이프 자체는 fork함수에 의해 복사되지 않음.
2. 파이프는 방향성이 존재하지 않는다.

